// Generated by view binder compiler. Do not edit!
package com.example.attemptatautentification.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.attemptatautentification.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SubplanItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CheckBox subplanCheckBox;

  @NonNull
  public final Button subplanDelete;

  @NonNull
  public final EditText subplanName;

  private SubplanItemBinding(@NonNull ConstraintLayout rootView, @NonNull CheckBox subplanCheckBox,
      @NonNull Button subplanDelete, @NonNull EditText subplanName) {
    this.rootView = rootView;
    this.subplanCheckBox = subplanCheckBox;
    this.subplanDelete = subplanDelete;
    this.subplanName = subplanName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SubplanItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SubplanItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.subplan_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SubplanItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.subplan_checkBox;
      CheckBox subplanCheckBox = rootView.findViewById(id);
      if (subplanCheckBox == null) {
        break missingId;
      }

      id = R.id.subplan_delete;
      Button subplanDelete = rootView.findViewById(id);
      if (subplanDelete == null) {
        break missingId;
      }

      id = R.id.subplan_name;
      EditText subplanName = rootView.findViewById(id);
      if (subplanName == null) {
        break missingId;
      }

      return new SubplanItemBinding((ConstraintLayout) rootView, subplanCheckBox, subplanDelete,
          subplanName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
