// Generated by view binder compiler. Do not edit!
package com.example.attemptatautentification.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.RatingBar;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.example.attemptatautentification.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDeadlineEditScreenBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button addSubplan;

  @NonNull
  public final Spinner categoriesSpinner;

  @NonNull
  public final EditText dateCaption;

  @NonNull
  public final EditText deadlineCaption;

  @NonNull
  public final EditText deadlineCategory;

  @NonNull
  public final EditText deadlineDate;

  @NonNull
  public final EditText deadlineDeadline;

  @NonNull
  public final Button deadlineDelete;

  @NonNull
  public final CheckBox deadlineFinished;

  @NonNull
  public final RatingBar deadlineImportance;

  @NonNull
  public final EditText deadlineImportanceCaption;

  @NonNull
  public final EditText deadlineNotes;

  @NonNull
  public final EditText deadlinePutOff;

  @NonNull
  public final EditText deadlineRepeat;

  @NonNull
  public final Button deadlineSave;

  @NonNull
  public final EditText deadlineTitle;

  @NonNull
  public final EditText notesCaption;

  @NonNull
  public final Spinner putOffSpinner;

  @NonNull
  public final Spinner repeatSpinner;

  @NonNull
  public final EditText rvCaption;

  @NonNull
  public final RecyclerView rvSubplans;

  @NonNull
  public final EditText titleCaption;

  private ActivityDeadlineEditScreenBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button addSubplan, @NonNull Spinner categoriesSpinner, @NonNull EditText dateCaption,
      @NonNull EditText deadlineCaption, @NonNull EditText deadlineCategory,
      @NonNull EditText deadlineDate, @NonNull EditText deadlineDeadline,
      @NonNull Button deadlineDelete, @NonNull CheckBox deadlineFinished,
      @NonNull RatingBar deadlineImportance, @NonNull EditText deadlineImportanceCaption,
      @NonNull EditText deadlineNotes, @NonNull EditText deadlinePutOff,
      @NonNull EditText deadlineRepeat, @NonNull Button deadlineSave,
      @NonNull EditText deadlineTitle, @NonNull EditText notesCaption,
      @NonNull Spinner putOffSpinner, @NonNull Spinner repeatSpinner, @NonNull EditText rvCaption,
      @NonNull RecyclerView rvSubplans, @NonNull EditText titleCaption) {
    this.rootView = rootView;
    this.addSubplan = addSubplan;
    this.categoriesSpinner = categoriesSpinner;
    this.dateCaption = dateCaption;
    this.deadlineCaption = deadlineCaption;
    this.deadlineCategory = deadlineCategory;
    this.deadlineDate = deadlineDate;
    this.deadlineDeadline = deadlineDeadline;
    this.deadlineDelete = deadlineDelete;
    this.deadlineFinished = deadlineFinished;
    this.deadlineImportance = deadlineImportance;
    this.deadlineImportanceCaption = deadlineImportanceCaption;
    this.deadlineNotes = deadlineNotes;
    this.deadlinePutOff = deadlinePutOff;
    this.deadlineRepeat = deadlineRepeat;
    this.deadlineSave = deadlineSave;
    this.deadlineTitle = deadlineTitle;
    this.notesCaption = notesCaption;
    this.putOffSpinner = putOffSpinner;
    this.repeatSpinner = repeatSpinner;
    this.rvCaption = rvCaption;
    this.rvSubplans = rvSubplans;
    this.titleCaption = titleCaption;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDeadlineEditScreenBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDeadlineEditScreenBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_deadline_edit_screen, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDeadlineEditScreenBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_subplan;
      Button addSubplan = rootView.findViewById(id);
      if (addSubplan == null) {
        break missingId;
      }

      id = R.id.categories_spinner;
      Spinner categoriesSpinner = rootView.findViewById(id);
      if (categoriesSpinner == null) {
        break missingId;
      }

      id = R.id.date_caption;
      EditText dateCaption = rootView.findViewById(id);
      if (dateCaption == null) {
        break missingId;
      }

      id = R.id.deadline_caption;
      EditText deadlineCaption = rootView.findViewById(id);
      if (deadlineCaption == null) {
        break missingId;
      }

      id = R.id.deadline_category;
      EditText deadlineCategory = rootView.findViewById(id);
      if (deadlineCategory == null) {
        break missingId;
      }

      id = R.id.deadline_date;
      EditText deadlineDate = rootView.findViewById(id);
      if (deadlineDate == null) {
        break missingId;
      }

      id = R.id.deadline_deadline;
      EditText deadlineDeadline = rootView.findViewById(id);
      if (deadlineDeadline == null) {
        break missingId;
      }

      id = R.id.deadline_delete;
      Button deadlineDelete = rootView.findViewById(id);
      if (deadlineDelete == null) {
        break missingId;
      }

      id = R.id.deadline_finished;
      CheckBox deadlineFinished = rootView.findViewById(id);
      if (deadlineFinished == null) {
        break missingId;
      }

      id = R.id.deadline_importance;
      RatingBar deadlineImportance = rootView.findViewById(id);
      if (deadlineImportance == null) {
        break missingId;
      }

      id = R.id.deadline_importance_caption;
      EditText deadlineImportanceCaption = rootView.findViewById(id);
      if (deadlineImportanceCaption == null) {
        break missingId;
      }

      id = R.id.deadline_notes;
      EditText deadlineNotes = rootView.findViewById(id);
      if (deadlineNotes == null) {
        break missingId;
      }

      id = R.id.deadline_putOff;
      EditText deadlinePutOff = rootView.findViewById(id);
      if (deadlinePutOff == null) {
        break missingId;
      }

      id = R.id.deadline_repeat;
      EditText deadlineRepeat = rootView.findViewById(id);
      if (deadlineRepeat == null) {
        break missingId;
      }

      id = R.id.deadline_save;
      Button deadlineSave = rootView.findViewById(id);
      if (deadlineSave == null) {
        break missingId;
      }

      id = R.id.deadline_title;
      EditText deadlineTitle = rootView.findViewById(id);
      if (deadlineTitle == null) {
        break missingId;
      }

      id = R.id.notes_caption;
      EditText notesCaption = rootView.findViewById(id);
      if (notesCaption == null) {
        break missingId;
      }

      id = R.id.putOff_spinner;
      Spinner putOffSpinner = rootView.findViewById(id);
      if (putOffSpinner == null) {
        break missingId;
      }

      id = R.id.repeat_spinner;
      Spinner repeatSpinner = rootView.findViewById(id);
      if (repeatSpinner == null) {
        break missingId;
      }

      id = R.id.rv_caption;
      EditText rvCaption = rootView.findViewById(id);
      if (rvCaption == null) {
        break missingId;
      }

      id = R.id.rv_subplans;
      RecyclerView rvSubplans = rootView.findViewById(id);
      if (rvSubplans == null) {
        break missingId;
      }

      id = R.id.title_caption;
      EditText titleCaption = rootView.findViewById(id);
      if (titleCaption == null) {
        break missingId;
      }

      return new ActivityDeadlineEditScreenBinding((ConstraintLayout) rootView, addSubplan,
          categoriesSpinner, dateCaption, deadlineCaption, deadlineCategory, deadlineDate,
          deadlineDeadline, deadlineDelete, deadlineFinished, deadlineImportance,
          deadlineImportanceCaption, deadlineNotes, deadlinePutOff, deadlineRepeat, deadlineSave,
          deadlineTitle, notesCaption, putOffSpinner, repeatSpinner, rvCaption, rvSubplans,
          titleCaption);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
